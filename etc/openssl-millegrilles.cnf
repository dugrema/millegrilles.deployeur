HOME            = ../etc
RANDFILE        = $ENV::HOME/.rnd
NOM_MILLEGRILLE = $ENV::NOM_MILLEGRILLE
NOM_NOEUD       = $ENV::NOM_NOEUD
base_dir        = /opt/millegrilles/$NOM_MILLEGRILLE/pki
CERTS           = $base_dir/certs
KEYS            = $base_dir/keys
DB_SSROOT       = $base_dir/dbs/${NOM_MILLEGRILLE}_root
DB              = $base_dir/dbs/${NOM_MILLEGRILLE}_millegrille

####################################################################
[ ca ]
default_ca    = CA_root      # The default ca section

[ CA_root ]

default_days     = 730          # How long to certify for
default_crl_days = 30           # How long before next CRL
default_md       = sha512       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert

# base_dir      = .
certificate   = $CERTS/${NOM_MILLEGRILLE}_ssroot.cert.pem   # The CA certifcate
private_key   = $KEYS/${NOM_MILLEGRILLE}_ssroot.key.pem     # The CA private key
new_certs_dir = $DB_SSROOT/certs        # Location for new certs after signing
database      = $DB_SSROOT/index.txt    # Database index file
serial        = $DB_SSROOT/serial.txt   # The current serial number

unique_subject = no  # Set to 'no' to allow creation of
                     # several certificates with same subject.

[ CA_millegrille ]

default_days     = 366          # How long to certify for
default_crl_days = 30           # How long before next CRL
default_md       = sha512       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert

# base_dir      = .
certificate   = $CERTS/${NOM_MILLEGRILLE}_millegrille.cert.pem   # The CA certifcate
private_key   = $KEYS/${NOM_MILLEGRILLE}_millegrille.key.pem    # The CA private key
new_certs_dir = $DB/certs        # Location for new certs after signing
database      = $DB/index.txt    # Database index file
serial        = $DB/serial.txt   # The current serial number

unique_subject = no  # Set to 'no' to allow creation of
                     # several certificates with same subject.

####################################################################
[ req ]
# prompt             = no
default_bits       = 2048
default_keyfile    = ${NOM_MILLEGRILLE}_millegrille.pem
distinguished_name = ca_distinguished_name
x509_extensions    = ca_extensions
string_mask        = utf8only

####################################################################
[ ca_distinguished_name ]
organizationName            = Organization Name (eg, company)
organizationName_default    = MilleGrilles

organizationalUnitName         = Organizational Unit (eg, division)
organizationalUnitName_default = SSRoot

commonName         = Common Name (e.g. server FQDN or YOUR name)
commonName_default = ssroot.millegrilles.com

emailAddress         = Email Address
emailAddress_default = ssroot@millegrilles.com

####################################################################
[ ca_extensions ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:TRUE
keyUsage               = keyCertSign, cRLSign

[ ca_signing_policy ]
organizationName = supplied
organizationalUnitName = supplied
commonName = supplied
emailAddress = optional

[ ca_signing_req ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:TRUE
keyUsage               = keyCertSign, cRLSign

####################################################################
[ noeud_signing_policy ]
organizationName = supplied
organizationalUnitName = supplied
commonName = supplied

[ noeud_req_extensions ]

subjectKeyIdentifier = hash
basicConstraints     = CA:FALSE
keyUsage             = digitalSignature, nonRepudiation, keyEncipherment

####################################################################
[ middleware_req_extensions ]

subjectKeyIdentifier = hash
basicConstraints     = CA:FALSE
keyUsage             = digitalSignature, nonRepudiation, keyEncipherment
subjectAltName       = @middleware_alts

[ middleware_alts ]
# Section swarm docker (sans suffixe)
DNS.1  = mongo
DNS.2  = mq
DNS.3  = consignationfichiers

# Section .local
DNS.4  = $NOM_NOEUD.local
DNS.5  = www-${NOM_MILLEGRILLE}.local
DNS.6  = coupdoeil-${NOM_MILLEGRILLE}.local
DNS.7  = mq-${NOM_MILLEGRILLE}.local
DNS.8  = mongo-express-${NOM_MILLEGRILLE}.local
