HOME            = ../etc
RANDFILE        = $ENV::HOME/.rnd
#NOM_MILLEGRILLE = $ENV::NOM_MILLEGRILLE
#NOM_NOEUD       = $ENV::NOM_NOEUD
#URL_PUBLIC      = $ENV::URL_PUBLIC
#base_dir        = /opt/millegrilles/$NOM_MILLEGRILLE/pki
#CERTS           = $base_dir/certs
#KEYS            = $base_dir/keys
#DB_SSROOT       = $base_dir/dbs/${NOM_MILLEGRILLE}_root
#DB              = $base_dir/dbs/${NOM_MILLEGRILLE}_millegrille

####################################################################
[ ca ]
default_ca    = CA_racine      # The default ca section

[ CA_racine ]

default_days     = 730          # How long to certify for
default_crl_days = 30           # How long before next CRL
default_md       = sha512       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert

# base_dir      = .
#certificate   = $CERTS/${NOM_MILLEGRILLE}_ssroot.cert.pem   # The CA certifcate
#private_key   = $KEYS/${NOM_MILLEGRILLE}_ssroot.key.pem     # The CA private key
#new_certs_dir = $DB_SSROOT/certs        # Location for new certs after signing
#database      = $DB_SSROOT/index.txt    # Database index file
#serial        = $DB_SSROOT/serial.txt   # The current serial number

unique_subject = no  # Set to 'no' to allow creation of
                     # several certificates with same subject.

####################################################################
[ req ]
default_bits       = 4096
distinguished_name = ca_distinguished_name
x509_extensions    = ca_extensions
string_mask        = utf8only

####################################################################
[ ca_distinguished_name ]

####################################################################
[ ca_extensions ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:TRUE
keyUsage               = keyCertSign, cRLSign

[ ca_signing_policy ]
organizationName = supplied
organizationalUnitName = supplied
commonName = supplied

[ ca_signing_req ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:TRUE
keyUsage               = keyCertSign, cRLSign
